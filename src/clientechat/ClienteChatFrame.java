package clientechat;


import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import video.NewJFrame;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Angel
 */
public class ClienteChatFrame extends javax.swing.JFrame {
    
    private ConfigFrame cf = new ConfigFrame(this,true);
    private Configuraciones conf = cf.getConfig();
    private Socket socket;
    private NewJFrame cam;
    /**
     * Creates new form ClienteChatFrame
     */
    public ClienteChatFrame() {
        super("Cliente Chat");
        initComponents();
        cf.setVisible(true);
        System.out.println(conf.getUsuario());
        System.out.println(conf.getHost());
        System.out.println(conf.getPuerto());
        try {
            this.socket = new Socket(conf.getHost(), conf.getPuerto());
        } catch (IOException ex) {
            System.out.print("No se ha podido conectar con el servidor: ");
            Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        setTitle(conf.getUsuario());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaMensajes = new javax.swing.JTextArea();
        btEnviar = new javax.swing.JButton();
        tfMensaje = new javax.swing.JTextField();
        capturaCamara = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaMensajes.setColumns(20);
        areaMensajes.setLineWrap(true);
        areaMensajes.setRows(5);
        areaMensajes.setWrapStyleWord(true);
        areaMensajes.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        areaMensajes.setEnabled(false);
        areaMensajes.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(areaMensajes);

        btEnviar.setBackground(new java.awt.Color(102, 102, 102));
        btEnviar.setForeground(new java.awt.Color(255, 255, 255));
        btEnviar.setText("Send");
        btEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarActionPerformed(evt);
            }
        });

        tfMensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMensajeKeyPressed(evt);
            }
        });

        capturaCamara.setText("capturar");
        capturaCamara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capturaCamaraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(tfMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEnviar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(capturaCamara)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(capturaCamara)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEnviar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarActionPerformed
        conexionServidor();
    }//GEN-LAST:event_btEnviarActionPerformed

    private void tfMensajeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMensajeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            conexionServidor();
        }
        
    }//GEN-LAST:event_tfMensajeKeyPressed

    private void capturaCamaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capturaCamaraActionPerformed
        cam = new NewJFrame();
        cam.setVisible(true);
    }//GEN-LAST:event_capturaCamaraActionPerformed

    public void recibirMenServidor(){
        DataInputStream dis = null;
        String mensaje;
        
        try {
            dis = new DataInputStream(socket.getInputStream());
        } catch (IOException ex) {
            System.out.print("Error al crear el streme de entrada: ");
            Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex){
            System.out.print("El socket no se creo correctamente (recibirMensaje): ");
            Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //bucle infinito para recibir el mensaje del servidor
        boolean conectado = true;
        while(conectado){
            try {
                mensaje = dis.readUTF();
                this.areaMensajes.append(mensaje + System.lineSeparator());
            } catch (IOException ex) {
                Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, ex);
                conectado = false;
            }catch (NullPointerException ex) {
                Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, ex);
                conectado = false;
            }
     
        }
    }
    
    
    public void conexionServidor(){
        DataOutputStream dos;
        
        try {
            dos = new DataOutputStream(this.socket.getOutputStream());
            dos.writeUTF(conf.getUsuario()+": " + this.tfMensaje.getText());
            this.tfMensaje.setText("");
        } catch (IOException ex) {
            System.out.print("Error al crear el stream del cliente: ");
            Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException e){
            System.out.print("El socket no se creo correctamente. (conexionServidor): ");
            Logger.getLogger(ClienteChatFrame.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClienteChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClienteChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClienteChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClienteChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ClienteChatFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaMensajes;
    private javax.swing.JButton btEnviar;
    private javax.swing.JButton capturaCamara;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tfMensaje;
    // End of variables declaration//GEN-END:variables
}
